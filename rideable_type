WITH ride_durations AS (
  SELECT
    MONTH(started_at) AS month,
    DAYNAME(started_at) AS day_of_week,
    member_casual,
    rideable_type,
    TIMESTAMPDIFF(SECOND, started_at, ended_at) AS seconds
  FROM
    trip.combined_trip
  WHERE
    MONTH(started_at) BETWEEN 1 AND 12
)

SELECT
  month,
  rideable_type,
  COUNT(*) AS total_rides,
  CONCAT(
    FLOOR(SUM(seconds) / 86400), ' days ',
    FLOOR((SUM(seconds) % 86400) / 3600), ' hours ',
    FLOOR(((SUM(seconds) % 86400) % 3600) / 60), ' minutes ',
    FLOOR(SUM(seconds) % 60), ' seconds'
  ) AS total_ride_length,
  CONCAT(
    FLOOR(AVG(seconds) / 86400), ' days ',
    FLOOR((AVG(seconds) % 86400) / 3600), ' hours ',
    FLOOR(((AVG(seconds) % 86400) % 3600) / 60), ' minutes ',
    FLOOR(AVG(seconds) % 60), ' seconds'
  ) AS avg_ride_length
FROM
  ride_durations
GROUP BY
  month, rideable_type
ORDER BY
  total_rides DESC
LIMIT 20;


##This SQL query analyzes ride durations based on months and rideable types, providing insights into the total number of rides, total ride duration, and average ride duration. Here's a breakdown of the query:

1)Common Table Expression (CTE):

    ride_durations: Extracts relevant information such as the month, day of the week, user type (member_casual), rideable type, and the duration of each ride in seconds. It filters rides to only include those with a valid month (between 1 and 12).
2)Main Query:

  Selects information from the ride_durations CTE.
  Groups the results by month and rideable type.
  Calculates various metrics:
  total_rides: Count of rides.
  total_ride_length: Total ride duration formatted in days, hours, minutes, and seconds.
  avg_ride_length: Average ride duration formatted similarly.
3)The results are ordered by total rides in descending order and limited to the top 20 records.
